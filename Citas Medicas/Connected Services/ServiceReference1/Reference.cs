//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Citas_Medicas.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registrarse", ReplyAction="http://tempuri.org/IService1/RegistrarseResponse")]
        int Registrarse(string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, string usuario, string contra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Registrarse", ReplyAction="http://tempuri.org/IService1/RegistrarseResponse")]
        System.Threading.Tasks.Task<int> RegistrarseAsync(string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, string usuario, string contra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Loguearse", ReplyAction="http://tempuri.org/IService1/LoguearseResponse")]
        bool Loguearse(string usuario, string contra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Loguearse", ReplyAction="http://tempuri.org/IService1/LoguearseResponse")]
        System.Threading.Tasks.Task<bool> LoguearseAsync(string usuario, string contra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Rol_Usuario", ReplyAction="http://tempuri.org/IService1/Rol_UsuarioResponse")]
        int Rol_Usuario(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Rol_Usuario", ReplyAction="http://tempuri.org/IService1/Rol_UsuarioResponse")]
        System.Threading.Tasks.Task<int> Rol_UsuarioAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Actualizar_Paciente", ReplyAction="http://tempuri.org/IService1/Actualizar_PacienteResponse")]
        void Actualizar_Paciente(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int cui, int vac, string sangre, string carrera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Actualizar_Paciente", ReplyAction="http://tempuri.org/IService1/Actualizar_PacienteResponse")]
        System.Threading.Tasks.Task Actualizar_PacienteAsync(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int cui, int vac, string sangre, string carrera);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Datos_Paciente", ReplyAction="http://tempuri.org/IService1/Datos_PacienteResponse")]
        Base_Datos.Paciente Datos_Paciente(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Datos_Paciente", ReplyAction="http://tempuri.org/IService1/Datos_PacienteResponse")]
        System.Threading.Tasks.Task<Base_Datos.Paciente> Datos_PacienteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Actualizar_Medico", ReplyAction="http://tempuri.org/IService1/Actualizar_MedicoResponse")]
        void Actualizar_Medico(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int especialidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Actualizar_Medico", ReplyAction="http://tempuri.org/IService1/Actualizar_MedicoResponse")]
        System.Threading.Tasks.Task Actualizar_MedicoAsync(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int especialidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Datos_Medico", ReplyAction="http://tempuri.org/IService1/Datos_MedicoResponse")]
        Base_Datos.Doctor Datos_Medico(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Datos_Medico", ReplyAction="http://tempuri.org/IService1/Datos_MedicoResponse")]
        System.Threading.Tasks.Task<Base_Datos.Doctor> Datos_MedicoAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Especialidades", ReplyAction="http://tempuri.org/IService1/EspecialidadesResponse")]
        Base_Datos.Especialidad[] Especialidades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Especialidades", ReplyAction="http://tempuri.org/IService1/EspecialidadesResponse")]
        System.Threading.Tasks.Task<Base_Datos.Especialidad[]> EspecialidadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Id_Usuario", ReplyAction="http://tempuri.org/IService1/Id_UsuarioResponse")]
        int Id_Usuario(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Id_Usuario", ReplyAction="http://tempuri.org/IService1/Id_UsuarioResponse")]
        System.Threading.Tasks.Task<int> Id_UsuarioAsync(string usuario);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Citas_Medico", ReplyAction="http://tempuri.org/IService1/Citas_MedicoResponse")]
        Base_Datos.Cita[] Citas_Medico(int id, string d, string m, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Citas_Medico", ReplyAction="http://tempuri.org/IService1/Citas_MedicoResponse")]
        System.Threading.Tasks.Task<Base_Datos.Cita[]> Citas_MedicoAsync(int id, string d, string m, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Citas_Paciente", ReplyAction="http://tempuri.org/IService1/Citas_PacienteResponse")]
        Base_Datos.Cita[] Citas_Paciente(int id, string d, string m, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Citas_Paciente", ReplyAction="http://tempuri.org/IService1/Citas_PacienteResponse")]
        System.Threading.Tasks.Task<Base_Datos.Cita[]> Citas_PacienteAsync(int id, string d, string m, string a);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Cambiar_Contraseña", ReplyAction="http://tempuri.org/IService1/Cambiar_ContraseñaResponse")]
        void Cambiar_Contraseña(int id, string contra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Cambiar_Contraseña", ReplyAction="http://tempuri.org/IService1/Cambiar_ContraseñaResponse")]
        System.Threading.Tasks.Task Cambiar_ContraseñaAsync(int id, string contra);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Horarios", ReplyAction="http://tempuri.org/IService1/HorariosResponse")]
        Base_Datos.Horario[] Horarios(string anio, string diainicio, string diafin, string mes, int esp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Horarios", ReplyAction="http://tempuri.org/IService1/HorariosResponse")]
        System.Threading.Tasks.Task<Base_Datos.Horario[]> HorariosAsync(string anio, string diainicio, string diafin, string mes, int esp);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Usario_Registrado", ReplyAction="http://tempuri.org/IService1/Usario_RegistradoResponse")]
        int Usario_Registrado(string nom, string ape, string usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Usario_Registrado", ReplyAction="http://tempuri.org/IService1/Usario_RegistradoResponse")]
        System.Threading.Tasks.Task<int> Usario_RegistradoAsync(string nom, string ape, string usu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Medicos_Especialidad", ReplyAction="http://tempuri.org/IService1/Medicos_EspecialidadResponse")]
        Base_Datos.Doctor[] Medicos_Especialidad(int especialidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Medicos_Especialidad", ReplyAction="http://tempuri.org/IService1/Medicos_EspecialidadResponse")]
        System.Threading.Tasks.Task<Base_Datos.Doctor[]> Medicos_EspecialidadAsync(int especialidad);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Nueva_Cita", ReplyAction="http://tempuri.org/IService1/Nueva_CitaResponse")]
        void Nueva_Cita(string anio, string mes, string dia, string hora, string minutos, int medico, int paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Nueva_Cita", ReplyAction="http://tempuri.org/IService1/Nueva_CitaResponse")]
        System.Threading.Tasks.Task Nueva_CitaAsync(string anio, string mes, string dia, string hora, string minutos, int medico, int paciente);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Cita", ReplyAction="http://tempuri.org/IService1/Update_CitaResponse")]
        void Update_Cita(int id, bool estado, string diagnostico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Update_Cita", ReplyAction="http://tempuri.org/IService1/Update_CitaResponse")]
        System.Threading.Tasks.Task Update_CitaAsync(int id, bool estado, string diagnostico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Meses", ReplyAction="http://tempuri.org/IService1/MesesResponse")]
        string[] Meses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Meses", ReplyAction="http://tempuri.org/IService1/MesesResponse")]
        System.Threading.Tasks.Task<string[]> MesesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Cantidad_Citas", ReplyAction="http://tempuri.org/IService1/Cantidad_CitasResponse")]
        Base_Datos.Reporte[] Cantidad_Citas(int id, string mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Cantidad_Citas", ReplyAction="http://tempuri.org/IService1/Cantidad_CitasResponse")]
        System.Threading.Tasks.Task<Base_Datos.Reporte[]> Cantidad_CitasAsync(int id, string mes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Correo_Usuario", ReplyAction="http://tempuri.org/IService1/Correo_UsuarioResponse")]
        string Correo_Usuario(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Correo_Usuario", ReplyAction="http://tempuri.org/IService1/Correo_UsuarioResponse")]
        System.Threading.Tasks.Task<string> Correo_UsuarioAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Citas_Medicas.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Citas_Medicas.ServiceReference1.IService1>, Citas_Medicas.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Registrarse(string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, string usuario, string contra) {
            return base.Channel.Registrarse(nombre, apellido, direccion, fec_nac, correo, usuario, contra);
        }
        
        public System.Threading.Tasks.Task<int> RegistrarseAsync(string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, string usuario, string contra) {
            return base.Channel.RegistrarseAsync(nombre, apellido, direccion, fec_nac, correo, usuario, contra);
        }
        
        public bool Loguearse(string usuario, string contra) {
            return base.Channel.Loguearse(usuario, contra);
        }
        
        public System.Threading.Tasks.Task<bool> LoguearseAsync(string usuario, string contra) {
            return base.Channel.LoguearseAsync(usuario, contra);
        }
        
        public int Rol_Usuario(int id) {
            return base.Channel.Rol_Usuario(id);
        }
        
        public System.Threading.Tasks.Task<int> Rol_UsuarioAsync(int id) {
            return base.Channel.Rol_UsuarioAsync(id);
        }
        
        public void Actualizar_Paciente(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int cui, int vac, string sangre, string carrera) {
            base.Channel.Actualizar_Paciente(id, nombre, apellido, direccion, fec_nac, correo, cui, vac, sangre, carrera);
        }
        
        public System.Threading.Tasks.Task Actualizar_PacienteAsync(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int cui, int vac, string sangre, string carrera) {
            return base.Channel.Actualizar_PacienteAsync(id, nombre, apellido, direccion, fec_nac, correo, cui, vac, sangre, carrera);
        }
        
        public Base_Datos.Paciente Datos_Paciente(int id) {
            return base.Channel.Datos_Paciente(id);
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Paciente> Datos_PacienteAsync(int id) {
            return base.Channel.Datos_PacienteAsync(id);
        }
        
        public void Actualizar_Medico(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int especialidad) {
            base.Channel.Actualizar_Medico(id, nombre, apellido, direccion, fec_nac, correo, especialidad);
        }
        
        public System.Threading.Tasks.Task Actualizar_MedicoAsync(int id, string nombre, string apellido, string direccion, System.DateTime fec_nac, string correo, int especialidad) {
            return base.Channel.Actualizar_MedicoAsync(id, nombre, apellido, direccion, fec_nac, correo, especialidad);
        }
        
        public Base_Datos.Doctor Datos_Medico(int id) {
            return base.Channel.Datos_Medico(id);
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Doctor> Datos_MedicoAsync(int id) {
            return base.Channel.Datos_MedicoAsync(id);
        }
        
        public Base_Datos.Especialidad[] Especialidades() {
            return base.Channel.Especialidades();
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Especialidad[]> EspecialidadesAsync() {
            return base.Channel.EspecialidadesAsync();
        }
        
        public int Id_Usuario(string usuario) {
            return base.Channel.Id_Usuario(usuario);
        }
        
        public System.Threading.Tasks.Task<int> Id_UsuarioAsync(string usuario) {
            return base.Channel.Id_UsuarioAsync(usuario);
        }
        
        public Base_Datos.Cita[] Citas_Medico(int id, string d, string m, string a) {
            return base.Channel.Citas_Medico(id, d, m, a);
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Cita[]> Citas_MedicoAsync(int id, string d, string m, string a) {
            return base.Channel.Citas_MedicoAsync(id, d, m, a);
        }
        
        public Base_Datos.Cita[] Citas_Paciente(int id, string d, string m, string a) {
            return base.Channel.Citas_Paciente(id, d, m, a);
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Cita[]> Citas_PacienteAsync(int id, string d, string m, string a) {
            return base.Channel.Citas_PacienteAsync(id, d, m, a);
        }
        
        public void Cambiar_Contraseña(int id, string contra) {
            base.Channel.Cambiar_Contraseña(id, contra);
        }
        
        public System.Threading.Tasks.Task Cambiar_ContraseñaAsync(int id, string contra) {
            return base.Channel.Cambiar_ContraseñaAsync(id, contra);
        }
        
        public Base_Datos.Horario[] Horarios(string anio, string diainicio, string diafin, string mes, int esp) {
            return base.Channel.Horarios(anio, diainicio, diafin, mes, esp);
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Horario[]> HorariosAsync(string anio, string diainicio, string diafin, string mes, int esp) {
            return base.Channel.HorariosAsync(anio, diainicio, diafin, mes, esp);
        }
        
        public int Usario_Registrado(string nom, string ape, string usu) {
            return base.Channel.Usario_Registrado(nom, ape, usu);
        }
        
        public System.Threading.Tasks.Task<int> Usario_RegistradoAsync(string nom, string ape, string usu) {
            return base.Channel.Usario_RegistradoAsync(nom, ape, usu);
        }
        
        public Base_Datos.Doctor[] Medicos_Especialidad(int especialidad) {
            return base.Channel.Medicos_Especialidad(especialidad);
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Doctor[]> Medicos_EspecialidadAsync(int especialidad) {
            return base.Channel.Medicos_EspecialidadAsync(especialidad);
        }
        
        public void Nueva_Cita(string anio, string mes, string dia, string hora, string minutos, int medico, int paciente) {
            base.Channel.Nueva_Cita(anio, mes, dia, hora, minutos, medico, paciente);
        }
        
        public System.Threading.Tasks.Task Nueva_CitaAsync(string anio, string mes, string dia, string hora, string minutos, int medico, int paciente) {
            return base.Channel.Nueva_CitaAsync(anio, mes, dia, hora, minutos, medico, paciente);
        }
        
        public void Update_Cita(int id, bool estado, string diagnostico) {
            base.Channel.Update_Cita(id, estado, diagnostico);
        }
        
        public System.Threading.Tasks.Task Update_CitaAsync(int id, bool estado, string diagnostico) {
            return base.Channel.Update_CitaAsync(id, estado, diagnostico);
        }
        
        public string[] Meses() {
            return base.Channel.Meses();
        }
        
        public System.Threading.Tasks.Task<string[]> MesesAsync() {
            return base.Channel.MesesAsync();
        }
        
        public Base_Datos.Reporte[] Cantidad_Citas(int id, string mes) {
            return base.Channel.Cantidad_Citas(id, mes);
        }
        
        public System.Threading.Tasks.Task<Base_Datos.Reporte[]> Cantidad_CitasAsync(int id, string mes) {
            return base.Channel.Cantidad_CitasAsync(id, mes);
        }
        
        public string Correo_Usuario(int id) {
            return base.Channel.Correo_Usuario(id);
        }
        
        public System.Threading.Tasks.Task<string> Correo_UsuarioAsync(int id) {
            return base.Channel.Correo_UsuarioAsync(id);
        }
    }
}
